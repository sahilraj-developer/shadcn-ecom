# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache.

services:
  server:
    build:
      context: .  # Build context is the current directory (where Dockerfile is)
    environment:
      NODE_ENV: production  # Set environment to production
      MONGO_URI: mongodb://mongo:27017/mydatabase  # MongoDB URI pointing to the MongoDB service
    ports:
      - 4001:4001  # Expose port 4001 on the host to port 4001 on the container
    depends_on:
      - mongo  # Ensure the server starts after the MongoDB service is up

  # MongoDB service definition
  mongo:
    image: mongo:latest  # Use the latest MongoDB image
    container_name: mongo  # Name the container for easier reference
    volumes:
      - mongo-data:/data/db  # Persist MongoDB data between container restarts
    environment:
      MONGO_INITDB_ROOT_USERNAME: root  # MongoDB root username
      MONGO_INITDB_ROOT_PASSWORD: example  # MongoDB root password
    ports:
      - 27017:27017  # Expose MongoDB port to the host

# Define volumes to persist data
volumes:
  mongo-data:  # Volume to store MongoDB data

# Optional secrets section (can be used for storing sensitive data like passwords)
# secrets:
#   db-password:
#     file: db/password.txt
